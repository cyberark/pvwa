---
# tasks file for pvwa registration

- name: Registration Block
  block:

    - set_fact:
        pvwa_registration_configure_instance: true
        pvwa_registration_configure_vault: true
        pvwa_registration_register_instance: true
      when: pvwa_registration

    - name: Assign PVWA IP
      set_fact:
        pvwa_url: "https://{{ ansible_host }}/PasswordVault"
      when: pvwa_url is not defined

    - name: Stop report service
      win_service:
        name: "CyberArk Scheduled Tasks"
        state: stopped
      when:
        - pvwa_registration_configure_instance

    - name: Create configure instance input json
      win_copy:
        content: "{{ lookup('template', 'templates/ConfigureInstanceInput.json.j2') | to_nice_json }}"
        dest: '{{ pvwa_installation_path }}\Env\ConfigureInstanceInput.json'
      when:
        - pvwa_registration_configure_instance

    - name: Configure instance
      win_shell: |
        .\PVWADeploy.ps1 -Action ConfigureInstance -ParametersFile "{{ pvwa_installation_path }}\Env\ConfigureInstanceInput.json" -configFilesPath "{{ pvwa_installation_path }}"
      args:
        chdir: "{{ pvwa_registrationtool_folder }}"
      when:
        - pvwa_registration_configure_instance

    - name: Create configure vault input json
      win_copy:
        content: "{{ lookup('template', 'templates/ConfigureVaultInput.json.j2') | to_nice_json }}"
        dest: '{{ pvwa_installation_path }}\Env\ConfigureVaultInput.json'
      when:
        - pvwa_registration_configure_vault

    - name: Configure vault
      win_shell: |
        $secure_vault_password_object = ConvertTo-SecureString "{{ vault_password }}" -AsPlainText -Force
        .\PVWADeploy.ps1 -Action ConfigureVault -ParametersFile "{{ pvwa_installation_path }}\Env\ConfigureVaultInput.json" -configFilesPath "{{ pvwa_installation_path }}" -VaultSecurePassword $secure_vault_password_object
      args:
        chdir: "{{ pvwa_registrationtool_folder }}"
      when:
        - pvwa_registration_configure_vault
      no_log: true

    - name: Create register instance input json
      win_copy:
        content: "{{ lookup('template', 'templates/RegisterInstanceInput.json.j2') | to_nice_json }}"
        dest: '{{ pvwa_installation_path }}\Env\RegisterInstanceInput.json'
      when:
        - pvwa_registration_register_instance

    - name: Register instance
      win_shell: |
        $secure_vault_password_object = ConvertTo-SecureString "{{ vault_password }}" -AsPlainText -Force
        .\PVWADeploy.ps1 -Action RegisterInstance -ParametersFile "{{ pvwa_installation_path }}\Env\RegisterInstanceInput.json" -configFilesPath "{{ pvwa_installation_path }}" -VaultSecurePassword $secure_vault_password_object
      args:
        chdir: "{{ pvwa_registrationtool_folder }}"
      when:
        - pvwa_registration_register_instance
      no_log: true

    - name: Check that you can connect (GET) to pvwa and it returns a status 200
      win_uri:
        url: "https://127.0.0.1/PasswordVault/api/server"
        validate_certs: no
        timeout: 60
      register: pvwa_server_info
      until: pvwa_server_info.status_code == 200
      retries: 12
      delay: 10
      when:
        - pvwa_registration_register_instance

    - name: Start report service
      win_service:
        name: "CyberArk Scheduled Tasks"
        state: started
      when:
        - pvwa_registration_register_instance

    - set_fact:
        pvwa_registered: true
      when:
        - pvwa_registration_register_instance

  rescue:

    - fail:
        msg: 'ERROR: Registration failed. For more info check {{ lookup("config", "DEFAULT_LOG_PATH") | dirname }}/pvwa/{{ inventory_hostname }}_registration.log'
