---
# tasks file for pvwa_hardening

- name: Hardening Block
  block:

    - name: Run PVWA hardening
      win_shell: |
        $ErrorActionPreference = "SilentlyContinue"
        $Action = .\PVWA_Hardening.ps1
        $Action | Out-File -FilePath "{{ pvwa_hardening_log }}"
        $Result = Get-Content "{{ pvwa_hardening_log }}" -Raw | ConvertFrom-Json
        if ($Result.isSucceeded -ne 0) {
            exit 1
        } else {
            exit 0
        }
      args:
        chdir: "{{ pvwa_installationautomation_folder }}"

    - name: Get log path for hardening
      win_shell: |
        $Result = Get-Content "{{ pvwa_hardening_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch hardening log from original folder
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_hardening.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

  rescue:

    - name: Get log path for hardening
      win_shell: |
        $Result = Get-Content "{{ pvwa_hardening_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch hardening log from original folder
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_hardening.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

    - fail:
        msg: 'ERROR: Hardening failed. For more info check {{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_hardening.log'

# Validate PVWA Hardening

- name: Get PVWA Service Info
  win_service:
    name: CyberArk Scheduled Tasks
  register: service_info

- name: Set fact on hardening if correct user running the service
  set_fact:
    pvwa_hardened: true
  when: service_info.exists and service_info.username == ".\\PVWAReportsUser"
