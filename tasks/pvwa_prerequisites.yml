---
# tasks file for pvwa prerequisities

- name: Pre-Installation Block
  block:

    - name: Run PVWA prerequisities script
      win_shell: |
        # Script Name: PVWAPreInstall.ps1
        # Description: Initiating pre-installation proccess of PVWA. If success, returns OK

        $ErrorActionPreference = "SilentlyContinue"

        try {
            Set-Location "{{ pvwa_installationautomation_folder }}"
            $Action = .\PVWA_Prerequisites.ps1
            $Action | Out-File -FilePath "{{ pvwa_prerequisites_log }}"
            $Result = Get-Content "{{ pvwa_prerequisites_log }}" -Raw | ConvertFrom-Json
            if ($Result.isSucceeded -ne 0) {
                exit 1
            } else {
                exit 0
            }
            exit 0
        } catch {
            Write-Output "Error occured: $error"
            exit 1
        }

    - name: Get log path for preinstall
      win_shell: |
        $Result = Get-Content "{{ pvwa_prerequisites_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch preinstall log from path
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_preinstall.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

  rescue:

    - name: Get log path for preinstall
      win_shell: |
        $Result = Get-Content "{{ pvwa_prerequisites_log }}"
        Write-Output $Result
      register: log_result

    - name: Fetch preinstall log from path
      fetch:
        src: '{{ item.logPath }}'
        dest: '{{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_preinstall.log'
        flat: yes
      with_items:
        - "{{ log_result.stdout | from_json }}"

    - fail:
        msg: 'ERROR: Preinstallation failed. For more info check {{ playbook_dir | dirname }}/logs/pvwa/{{ inventory_hostname }}_preinstall.log'

- name: Enable HTTP Activation for .net framework
  win_feature:
    name: NET-WCF-HTTP-Activation45
    state: present
