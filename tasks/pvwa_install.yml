---
# tasks file for pvwa installation

- name: set installation folder on xml config file
  win_shell: |
    try
    {
        $filePath = "{{ pvwa_installationautomation_folder }}\\Installation\\InstallationConfig.xml"
        $xml = [xml](Get-Content $filePath)
        $step = $xml.SelectSingleNode("//Parameter[@Name = 'PVWAInstallDirectory']")
        $step.Value = "{{ pvwa_installation_path }}"
        $xml.Save($filePath)
        exit 0
    }
    catch
    {
        Write-Output "Error occured during SetAtrributeInXML"
        exit 1
    }

- name: Installation Block
  block:

    - name: run PVWA installation
      win_shell: |
        Set-Location "{{ pvwa_installationautomation_folder }}\Installation"
        #$ErrorActionPreference = "SilentlyContinue"
        $Action = .\PVWAInstallation.ps1
        $Action | Out-File -FilePath "{{ pvwa_install_log }}"
        $Result = Get-Content "{{ pvwa_install_log }}" | ConvertFrom-Json
        if ($Result.isSucceeded -ne 0) {
          exit 1
        } else {
          exit 0
        }
      args:
        chdir: "{{ pvwa_installationautomation_folder }}\\Installation"

    - name: Get log path for installation
      win_shell: |
        $Result = Get-Content "{{ pvwa_install_log }}"
        Write-Output $Result
      register: log_result

    - name: Validate PVWA installation
      win_lineinfile:
        path: '{{ log_result.stdout | from_json | json_query("logPath") }}'
        regexp: 'Operation Succeeded'
        state: present
        line: 'Operation Succeeded'

  rescue:

    - name: Get log path for installation
      win_shell: |
        $Result = Get-Content "{{ pvwa_install_log }}"
        Write-Output $Result
      register: log_result

    - fetch:
        src: '{{ log_result.stdout | from_json | json_query("logPath") }}'
        dest: '{{ playbook_dir }}/logs/pvwa/{{ inventory_hostname }}_install.log'
        flat: yes

    - fail:
        msg: 'ERROR: Installation failed. For more info check {{ playbook_dir }}/logs/pvwa/{{ inventory_hostname }}_install.log'

- name: Set PVWA exists variable
  set_fact:
    pvwa_exists: true
